<?xml version="1.0" encoding="UTF-8" standalone="no"?><templates><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_arraytolist">Arrays.asList(${word_selection})</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_carregaParamsPesqSessaoPesqAuto">      AppED ped = sessionFilter.get(this.getClass());&#13;
      if (ped != null) {&#13;
        setPed(ped);&#13;
      }&#13;
      &#13;
      if(this.realizarConsulta == null || this.realizarConsulta == false) {&#13;
        defineValoresDefaultDosCampos();&#13;
        this.realizarConsulta = false;&#13;
      }</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_ClassBD">${imp:import( javax.annotation.PostConstruct, javax.persistence.EntityManager, javax.persistence.PersistenceContext, org.hibernate.criterion.DetachedCriteria, org.hibernate.criterion.MatchMode, org.hibernate.criterion.Restrictions, com.procergs.gfi.infra.AppBD)}&#13;
&#13;
public class ${word_selection} extends AppBD&lt;${objetoED}, ${type:link(&#13;
	Long,&#13;
	Integer,&#13;
	Double,&#13;
	Float,&#13;
	String,&#13;
	BigDecimal)}&gt; {&#13;
&#13;
  @PersistenceContext(unitName = "GFI")&#13;
  EntityManager entityManager;&#13;
&#13;
  @PostConstruct&#13;
  public void init() {&#13;
    super.setEntityManager(entityManager);&#13;
    super.init();&#13;
  }&#13;
  &#13;
  @Override&#13;
  public DetachedCriteria montaCriterios(${objetoED} ed) {&#13;
    DetachedCriteria dc = DetachedCriteria.forClass(${objetoED}.class);&#13;
    &#13;
	if ((ed.getId()) != null) {&#13;
      dc.add(Restrictions.eq("id", ed.getId()));&#13;
    }&#13;
    ${parent:var(org.eclipse.swt.widgets.Composite)}&#13;
    return dc;&#13;
  }&#13;
}&#13;
${cursor}</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_ClassCTX">${imp:import( com.procergs.gfi.dividaativa.teste.BaseIT )}&#13;
&#13;
&#13;
public class ${word_selection}CTX extends BaseIT {&#13;
&#13;
  protected ${typeComunName}DAO      ${varcomunName}DAO;&#13;
  protected ${typeComunName}BD       ${varcomunName}BD;&#13;
  protected ${typeComunName}RN       ${varcomunName}RN;&#13;
  &#13;
  &#13;
  protected final void prepararCenarios() {&#13;
    super.startConnection();&#13;
    this.carregarSessionMB();&#13;
    super.carregarMessageProvider();&#13;
    this.carregarRN();&#13;
  }&#13;
  &#13;
  public ${typeComunName}RN carregarRN() {&#13;
    ${varcomunName}DAO = new ${typeComunName}DAO();&#13;
    ${varcomunName}DAO.setEntityManager(entityManager);&#13;
&#13;
    ${varcomunName}BD = new ${typeComunName}BD();&#13;
    ${varcomunName}BD.setEntityManager(entityManager);&#13;
    ${varcomunName}BD.setSessionMB(sessionMB);&#13;
&#13;
    ${varcomunName}RN = new ${typeComunName}RN();&#13;
    ${varcomunName}RN.set${typeComunName}BD(${varcomunName}BD);&#13;
&#13;
    return ${varcomunName}RN;&#13;
  }&#13;
  &#13;
  public ${typeComunName}ED incluir(String template) {&#13;
    ${typeComunName}ED ${typeComunName}ED = ${typeComunName}FTR.criar(template);&#13;
    return (${typeComunName}ED) ${typeComunName}DAO.inclui(${typeComunName}ED);&#13;
  }&#13;
&#13;
  public void incluirTodos() {&#13;
    this.incluir(${typeComunName}FTR.TEMPLATE_XXXXXXXX);&#13;
    this.incluir(${typeComunName}FTR.TEMPLATE_YYYYYYYY);&#13;
    this.incluir(${typeComunName}FTR.TEMPLATE_ZZZZZZZZ);&#13;
  }&#13;
}&#13;
${cursor}&#13;
&#13;
</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_ClassDAO">${imp:import( com.procergs.gfi.dividaativa.teste.AppDAO )}&#13;
&#13;
&#13;
public class ${word_selection}DAO extends AppDAO&lt;${word_selection}ED, Long&gt; {&#13;
${cursor}&#13;
}&#13;
</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_classRN">${imp:import( java.util.List, javax.annotation.PostConstruct, javax.ejb.Stateless, javax.ejb.TransactionAttribute, javax.ejb.TransactionAttributeType, javax.inject.Inject, com.procergs.arqjava4.security.Permissao, com.procergs.gfi.infra.AppInterceptor, com.procergs.gfi.infra.AppRN, com.procergs.gfi.modulo.dividaativa.ed.EtapaED)}&#13;
&#13;
@AppInterceptor&#13;
@Permissao(desabilitada = true)&#13;
@Stateless&#13;
@TransactionAttribute(TransactionAttributeType.SUPPORTS)&#13;
public class ${word_selection} extends AppRN&lt;${objetoED}, ${type:link(&#13;
	Long,&#13;
	Integer,&#13;
	Double,&#13;
	Float,&#13;
	String,&#13;
	BigDecimal)}&gt; {&#13;
&#13;
	private static final long serialVersionUID = 1L;&#13;
&#13;
	@Inject&#13;
	private ${objetoBD} ${objetoBD};&#13;
&#13;
	@PostConstruct&#13;
	public void initBD() {&#13;
		setBD(${objetoBD});&#13;
	}&#13;
&#13;
}</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_countLambda">${iterable_element}.stream().filter(resumo -&gt; resumo != null &amp;&amp; resumo.isXxxxYyyyyZzzzz()).count();</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_EhEventoAjaxPostBack">if (!FacesContext.getCurrentInstance().isPostback()) {&#13;
    ${word_selection}${cursor}&#13;
}</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_emailHtml">//Inicializa String conterá conteúdo do email com html&#13;
    StringBuilder conteudoEmail = new StringBuilder();&#13;
       &#13;
    // Inicio documento Html&#13;
    conteudoEmail.append("&lt;!DOCTYPE html&gt;");&#13;
    conteudoEmail.append("&lt;html&gt;");&#13;
    conteudoEmail.append("  &lt;head&gt;");&#13;
    conteudoEmail.append("    &lt;meta lang=\"pt-BR\" charset=\"ISO-8859-1\"&gt;");&#13;
    conteudoEmail.append("    &lt;title&gt;GFI - Relatório de geração de processos&lt;/title&gt;");&#13;
    conteudoEmail.append("  &lt;/head&gt;");&#13;
    conteudoEmail.append("  &lt;body&gt;");&#13;
    &#13;
    final Date dataAtual = new Date();&#13;
    &#13;
    final SimpleDateFormat formatadorData = new SimpleDateFormat("dd/MM/yyyy");&#13;
    final SimpleDateFormat formatadorHora = new SimpleDateFormat("HH:mm:ss");&#13;
    &#13;
    final String dataFormatada = formatadorData.format(dataAtual);&#13;
    final String horaFormatada = formatadorHora.format(dataAtual);&#13;
    &#13;
    final String nomeUsuario = sessionMB.getUser().getNome();&#13;
    final String matriculaUsuario = sessionMB.getUser().getProperties().get("matricula").toString();&#13;
    &#13;
    // Cabeçalho&#13;
    conteudoEmail.append("&lt;p style=\"text-indent: 50px;\"&gt;Resumo da geração de processos efetuada por ")&#13;
    .append(nomeUsuario)&#13;
    .append(" (matrícula: ")&#13;
    .append(matriculaUsuario)&#13;
    .append(") finalizada em ")&#13;
    .append(dataFormatada)&#13;
    .append(" às ")&#13;
    .append(horaFormatada)&#13;
    .append("&lt;/p&gt;");&#13;
&#13;
    //Título / mensagem&#13;
    conteudoEmail.append("&lt;label style=\"font-weight: bold;margin-left: 50px;\"&gt;");&#13;
    &#13;
    if (processosGeradosSucessoListSB.size() == 1) {&#13;
      conteudoEmail.append("1 processo gerado com sucesso:");&#13;
    } else if (processosGeradosSucessoListSB.size() &gt; 1) {&#13;
      conteudoEmail.append(processosGeradosSucessoListSB.size()).append(" processos gerados com sucesso:");&#13;
    }&#13;
    &#13;
    conteudoEmail.append("&lt;/label&gt;&lt;br&gt;");&#13;
    &#13;
    // Inicio tabela com titulo das colunas&#13;
    conteudoEmail.append("&lt;p/&gt;");&#13;
    conteudoEmail.append("&lt;table&gt;");&#13;
    conteudoEmail.append("  &lt;tr&gt;");&#13;
    conteudoEmail.append("    &lt;th style=\"padding: 0px 5px 0px 5px;\"&gt;Titulo 1&lt;/th&gt;");&#13;
    conteudoEmail.append("    &lt;th style=\"padding: 0px 5px 0px 5px;\"&gt;Titulo 2&lt;/th&gt;");&#13;
    conteudoEmail.append("    &lt;th style=\"padding: 0px 5px 0px 5px;\"&gt;Titulo 3&lt;/th&gt;");&#13;
    conteudoEmail.append("    &lt;th style=\"padding: 0px 5px 0px 5px;\"&gt;Titulo 4&lt;/th&gt;");&#13;
    conteudoEmail.append("    &lt;th style=\"padding: 0px 5px 0px 5px;\"&gt;Titulo 5&lt;/th&gt;");&#13;
    conteudoEmail.append("  &lt;/tr&gt;");&#13;
    &#13;
    // Adicionando linha tabela&#13;
    &#13;
    List&lt;StringBuilder&gt; linhas = new ArrayList&lt;StringBuilder&gt;();&#13;
    &#13;
    NumberFormat df = NumberFormat.getCurrencyInstance(new Locale("pt", "BR"));&#13;
    final AtomicInteger atomicIntegerProcessosNaoGerados = new AtomicInteger(0);&#13;
    &#13;
    if ( ${iterable_element} != null &amp;&amp; !${iterable_element}.isEmpty() ) { &#13;
      ${iterable_element}&#13;
        .stream()&#13;
        .filter( item -&gt;item.isXxxxxYyyyyZzzzz() == false )&#13;
        .forEach(resumo -&gt; &#13;
          {&#13;
            atomicIntegerProcessosNaoGerados.addAndGet(1);&#13;
            &#13;
            StringBuilder linhaSB = new StringBuilder();&#13;
            &#13;
            linhaSB.append("&lt;tr&gt;");&#13;
            linhaSB.append("  &lt;td style=\"padding: 0px 5px 0px 5px;\"&gt;").append(atomicIntegerProcessosNaoGerados.get()).append("&lt;/td&gt;");&#13;
            linhaSB.append("  &lt;td style=\"padding: 0px 5px 0px 5px;\"&gt;").append(resumo.getXxxxxxx()).append("&lt;/td&gt;");&#13;
            linhaSB.append("  &lt;td style=\"padding: 0px 5px 0px 5px;\"&gt;").append(resumo.getYyyyyyyyy()).append("&lt;/td&gt;");&#13;
            linhaSB.append("  &lt;td style=\"padding: 0px 5px 0px 5px;\"&gt;").append(resumo.getZzzzzzzz()).append("&lt;/td&gt;");&#13;
            linhaSB.append("  &lt;td style=\"padding: 0px 5px 0px 5px;\"&gt;").append(resumo.getDddddddd()).append("&lt;/td&gt;");&#13;
            linhaSB.append("&lt;/tr&gt;");&#13;
            &#13;
            linhas.add(linhaSB);&#13;
          }&#13;
        );&#13;
    &#13;
    //adiciona itens da tabela gerados    &#13;
    for (StringBuilder linha : processosGeradosSucessoListSB) {&#13;
      conteudoEmail.append(linha.toString());&#13;
    }    &#13;
    &#13;
    // Fim tabela&#13;
    conteudoEmail.append("&lt;/table&gt;");&#13;
    conteudoEmail.append("&lt;p/&gt;&lt;br&gt;");&#13;
    &#13;
    // Fim documento Html&#13;
    conteudoEmail.append("&lt;br&gt;&lt;br&gt;&lt;br&gt;");&#13;
    conteudoEmail.append("    %s");&#13;
    conteudoEmail.append("  &lt;/body&gt;");&#13;
    conteudoEmail.append("&lt;/html&gt;");</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_ErrorMessageJsf">FacesUtil.addErrorMessage(messageProvider.getMessage("${cursor}"));</template><template autoinsert="true" context="java" deleted="false" description="Generate Exception com Cause" enabled="true" name="j_excCauseClass">import com.procergs.gfi.infra.exception.RNExceptionComCause;&#13;
&#13;
public class ${word_selection} extends RNExceptionComCause {&#13;
&#13;
  public ${word_selection}(String mensagem) {&#13;
    super(mensagem);&#13;
  }&#13;
  &#13;
  public ${word_selection}() {&#13;
    super();&#13;
  }&#13;
&#13;
  private static final long serialVersionUID = 1L;&#13;
  &#13;
}&#13;
</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_ExibirDialogJSFdoMB">RequestContext context = RequestContext.getCurrentInstance();&#13;
context.execute("PF('${dialogName}').show();");</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_FormataCpfCnpj">CpfCnpjUtil.aplicaMascara(${NumeroCpfCnpj}, ${TipoPessoaEnum})</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_FormataDataDDMMYYYY">CalendarUtil.obterDataFormatadaDDMMAAAA(${CalendarVar})</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_FormataDinheiroBigDecimal">BigDecimalUtil.formataMascaraDinheiroComSimboloReais(${BigDecimalVal})</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_geraEmail">	  @Inject&#13;
    private Event&lt;EMail&gt; eventoDispararEMail;&#13;
    &#13;
	  try {&#13;
      &#13;
      String para     = PropriedadesSistemaUtil.buscaPropriedade(Propriedade.);&#13;
      String assunto  = "";&#13;
      String conteudo = ${geraConteudoEmail}.toString();&#13;
      &#13;
      EMail eMail = new EMail(para, assunto, conteudo, MimeType.TEXT_HTML);&#13;
      eventoDispararEMail.fire(eMail);&#13;
      &#13;
    } catch (Exception e) {&#13;
      logger.error("Problemas ao tentar enviar e-mail ${xxxxxxx} ", e);&#13;
    }</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_getResourceMessage">messageProvider.getMessage("${cursor}");</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_IfNotEmpty">if (${name:var} != null &amp;&amp; !${name:var}.isEmpty() ) {&#13;
	${cursor}&#13;
}</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_imprimirRelatorioPdfDoDataTable">public void imprimirRelatorioPdfDoDataTable() throws DocumentException, IOException {&#13;
	    PdfPrintList printList = new PdfPrintList(messageProvider.getMessage("${header}"), messageProvider.getMessage("${header}"), sessionMB);&#13;
	    printList.setTxtTexto(getCriterios());&#13;
	    &#13;
	    printList.criaColunas("","","","","","","","","","");&#13;
	    printList.limparLinhas();&#13;
&#13;
	    List&lt;InfracaoVencidaSinteticoED&gt; preProcessos = getRN().lista(getPed());&#13;
&#13;
	    for (InfracaoVencidaSinteticoED preProcesso : preProcessos) {&#13;
	    	printList.criarLinhaRelatorio( , , , , , , , , ,);&#13;
	    }&#13;
	    &#13;
	    printList.imprimir();&#13;
	  }</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_JSFerrorMessage">FacesUtil.addErrorMessage(messageProvider.getMessage("${cursor}"));</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_JSFinfoMessage">FacesUtil.addInfoMessage("${MensagemInformacao}")</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_leftPad">StringUtils.leftPad(${word_selection}, ${tamanho}, "${caracterSubstituir}")</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_LimpaDataTable">DataTable dataTable = (DataTable) FacesContext.getCurrentInstance().getViewRoot().findComponent("form:lista");&#13;
if (dataTable != null) {&#13;
    dataTable.setSortOrder("ascending");  // reset sortOrder&#13;
    dataTable.setFirst(0);                // reset page&#13;
    dataTable.setFilteredValue(null);     // reset filter&#13;
    dataTable.setFilters(null);&#13;
    dataTable.reset();&#13;
}</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_messageProvider">messageProvider.getMessage("")</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_MontaCriteriosCnpj">montaCriterios.montaCriterio(messageProvider.getMessage("label.cnpj"), CpfCnpjUtil.aplicaMascara(${NumeroCpfCnpj}, TipoPessoaEnum.PESSOA_JURIDICA), stringCriterios);</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_montaCriteriosCpf">montaCriterios.montaCriterio(messageProvider.getMessage("label.cpf"), CpfCnpjUtil.aplicaMascara(${NumeroCpfCnpj}, TipoPessoaEnum.PESSOA_FISICA), stringCriterios);</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_montaCriteriosDefault">montaCriterios.montaCriterio(messageProvider.getMessage(""), getPed().get(), stringCriterios);</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_montaCriteriosPeriodo">String intervaloPeriodo = new PeriodoData(${DataInicial}, ${DataFinal}).montarDescricaoPeriodo();&#13;
montaCriterios.montaCriterio(messageProvider.getMessage("${labelPeriodo}"), intervaloPeriodo , stringCriterios);</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_numberFormatPtBr">NumberFormat numFormatBr = NumberFormat.getCurrencyInstance(new Locale("pt", "BR"));</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_numberFormatPtBrApply">${numFormatBr}.format(${word_selection})</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_propriedadeSistema">String ${propriedadeSistema};  &#13;
    &#13;
try {&#13;
  ${propriedadeSistema} =  PropriedadesSistemaUtil.buscaPropriedade(Propriedade.${PropriedadeEstatica});&#13;
} catch (PropriedadeSistemaNaoEncontradaException excecao) {&#13;
  ${propriedadeSistema} = "&lt;Propriedade \"${descricaoPropriedadeSistema}\" não encontrada.&gt;";&#13;
  logger.warn(excecao.getMessage());&#13;
}</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_propriedadeSistemaSimplificada">PropriedadesSistemaUtil.buscaPropriedade(Propriedade.)</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_rightPad">StringUtils.rightPad(${word_selection}, ${tamanho}, "${caracterSubstituir}")</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_switch">//int i = -1;&#13;
//switch (i) {&#13;
switch (${localVar}) {&#13;
  case 0: System.out.println ("despicable"); break;&#13;
  case 1: System.out.println ("halo");       break;&#13;
  case 2: System.out.println ("fungus");     break;&#13;
  case 3: System.out.println ("fugitive");   break;&#13;
  case 4: System.out.println ("abstruse");   break;&#13;
  default: break;&#13;
}&#13;
</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_todo">/*** Para Fazer : &#13;
       * &#13;
       * ${todo}&#13;
       * Jeferson H Padilha&#13;
       * TODO_JHP&#13;
       * ${date} ::  ${time} &#13;
       * &#13;
       */&#13;
&#13;
${teste:var(com.procergs.gfi.infra.AbstractDadosControleSOE)}</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_validaCnpj">CnpjUtil.validaCnpj(getNumeroCpfCnpj());</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_validaCpf">CpfUtil.validaCpf(getNumeroCpfCnpj());</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_ValidaPeriodo">PeriodoUtil.validaPeriodo(${Calendar1}, ${Calendar2}, "${descricao}")</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_DataTableForaFramework">    // private Paginator&lt;GuiaED&gt;                  listaPaginadaDataTable;&#13;
    &#13;
    // &lt;p:dataTable id="dtGuiasDoProcesso" var="g" rowKey="#{g.id}"&#13;
    //  value="#{xxxxxxxFormMB.listaPaginadaDataTable.datamodel}"&#13;
    //  ...&#13;
    &#13;
    ${listaPaginadaDataTable} = new Paginator&lt;${XxxxED}&gt;();&#13;
    ${listaPaginadaDataTable}.setPaginatorRN(new PaginatorRN&lt;${XxxxED}&gt;(guiaPesq) {&#13;
&#13;
      /**&#13;
       * &#13;
       */&#13;
      private static final long serialVersionUID = 128377124721584434L;&#13;
&#13;
      @Override&#13;
      public List&lt;${XxxxED}&gt; lista() {&#13;
        return ${xxxRN}.listaXxxx(getPesqED());&#13;
      }&#13;
&#13;
      @Override&#13;
      public int conta() {&#13;
        return ${xxxRN}.listaXxxx(getPesqED()).size();&#13;
      }&#13;
    });</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_jpa_column">@Column(name = "${word_selection}${cursor}")</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="j_jpa_notnull">@NotNull</template></templates>